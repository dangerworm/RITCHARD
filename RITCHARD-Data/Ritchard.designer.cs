#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RITCHARD_Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="RITCHARD")]
	public partial class RitchardDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertConcept(Concept instance);
    partial void UpdateConcept(Concept instance);
    partial void DeleteConcept(Concept instance);
    partial void InsertConjugation(Conjugation instance);
    partial void UpdateConjugation(Conjugation instance);
    partial void DeleteConjugation(Conjugation instance);
    partial void InsertDefinition(Definition instance);
    partial void UpdateDefinition(Definition instance);
    partial void DeleteDefinition(Definition instance);
    partial void InsertPartsOfSpeech(PartsOfSpeech instance);
    partial void UpdatePartsOfSpeech(PartsOfSpeech instance);
    partial void DeletePartsOfSpeech(PartsOfSpeech instance);
    partial void InsertRelationship(Relationship instance);
    partial void UpdateRelationship(Relationship instance);
    partial void DeleteRelationship(Relationship instance);
    #endregion
		
		public RitchardDataContext() : 
				base(global::RITCHARD_Data.Properties.Settings.Default.RITCHARDConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public RitchardDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RitchardDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RitchardDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RitchardDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Concept> Concepts
		{
			get
			{
				return this.GetTable<Concept>();
			}
		}
		
		public System.Data.Linq.Table<Statistic> Statistics
		{
			get
			{
				return this.GetTable<Statistic>();
			}
		}
		
		public System.Data.Linq.Table<Conjugation> Conjugations
		{
			get
			{
				return this.GetTable<Conjugation>();
			}
		}
		
		public System.Data.Linq.Table<CorrectedSpelling> CorrectedSpellings
		{
			get
			{
				return this.GetTable<CorrectedSpelling>();
			}
		}
		
		public System.Data.Linq.Table<Definition> Definitions
		{
			get
			{
				return this.GetTable<Definition>();
			}
		}
		
		public System.Data.Linq.Table<PartsOfSpeech> PartsOfSpeeches
		{
			get
			{
				return this.GetTable<PartsOfSpeech>();
			}
		}
		
		public System.Data.Linq.Table<Relationship> Relationships
		{
			get
			{
				return this.GetTable<Relationship>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Concepts")]
	public partial class Concept : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ConceptID;
		
		private System.Guid _DefinitionID;
		
		private System.Guid _PartOfSpeechID;
		
		private System.Guid _PropertyDefinitionID;
		
		private System.Nullable<bool> _Bit;
		
		private System.Nullable<System.DateTime> _DateTime;
		
		private string _Geometry;
		
		private string _Location;
		
		private System.Nullable<decimal> _Money;
		
		private System.Nullable<double> _Number;
		
		private string _String;
		
		private EntitySet<Relationship> _Relationships;
		
		private EntitySet<Relationship> _Relationships1;
		
		private EntityRef<Definition> _Definition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConceptIDChanging(System.Guid value);
    partial void OnConceptIDChanged();
    partial void OnDefinitionIDChanging(System.Guid value);
    partial void OnDefinitionIDChanged();
    partial void OnPartOfSpeechIDChanging(System.Guid value);
    partial void OnPartOfSpeechIDChanged();
    partial void OnPropertyDefinitionIDChanging(System.Guid value);
    partial void OnPropertyDefinitionIDChanged();
    partial void OnBitChanging(System.Nullable<bool> value);
    partial void OnBitChanged();
    partial void OnDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDateTimeChanged();
    partial void OnGeometryChanging(string value);
    partial void OnGeometryChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnMoneyChanging(System.Nullable<decimal> value);
    partial void OnMoneyChanged();
    partial void OnNumberChanging(System.Nullable<double> value);
    partial void OnNumberChanged();
    partial void OnStringChanging(string value);
    partial void OnStringChanged();
    #endregion
		
		public Concept()
		{
			this._Relationships = new EntitySet<Relationship>(new Action<Relationship>(this.attach_Relationships), new Action<Relationship>(this.detach_Relationships));
			this._Relationships1 = new EntitySet<Relationship>(new Action<Relationship>(this.attach_Relationships1), new Action<Relationship>(this.detach_Relationships1));
			this._Definition = default(EntityRef<Definition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConceptID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ConceptID
		{
			get
			{
				return this._ConceptID;
			}
			set
			{
				if ((this._ConceptID != value))
				{
					this.OnConceptIDChanging(value);
					this.SendPropertyChanging();
					this._ConceptID = value;
					this.SendPropertyChanged("ConceptID");
					this.OnConceptIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefinitionID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DefinitionID
		{
			get
			{
				return this._DefinitionID;
			}
			set
			{
				if ((this._DefinitionID != value))
				{
					if (this._Definition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._DefinitionID = value;
					this.SendPropertyChanged("DefinitionID");
					this.OnDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartOfSpeechID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PartOfSpeechID
		{
			get
			{
				return this._PartOfSpeechID;
			}
			set
			{
				if ((this._PartOfSpeechID != value))
				{
					this.OnPartOfSpeechIDChanging(value);
					this.SendPropertyChanging();
					this._PartOfSpeechID = value;
					this.SendPropertyChanged("PartOfSpeechID");
					this.OnPartOfSpeechIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyDefinitionID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PropertyDefinitionID
		{
			get
			{
				return this._PropertyDefinitionID;
			}
			set
			{
				if ((this._PropertyDefinitionID != value))
				{
					this.OnPropertyDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._PropertyDefinitionID = value;
					this.SendPropertyChanged("PropertyDefinitionID");
					this.OnPropertyDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bit", DbType="Bit")]
		public System.Nullable<bool> Bit
		{
			get
			{
				return this._Bit;
			}
			set
			{
				if ((this._Bit != value))
				{
					this.OnBitChanging(value);
					this.SendPropertyChanging();
					this._Bit = value;
					this.SendPropertyChanged("Bit");
					this.OnBitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Geometry", DbType="VarChar(MAX)")]
		public string Geometry
		{
			get
			{
				return this._Geometry;
			}
			set
			{
				if ((this._Geometry != value))
				{
					this.OnGeometryChanging(value);
					this.SendPropertyChanging();
					this._Geometry = value;
					this.SendPropertyChanged("Geometry");
					this.OnGeometryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="VarChar(MAX)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Money", DbType="Money")]
		public System.Nullable<decimal> Money
		{
			get
			{
				return this._Money;
			}
			set
			{
				if ((this._Money != value))
				{
					this.OnMoneyChanging(value);
					this.SendPropertyChanging();
					this._Money = value;
					this.SendPropertyChanged("Money");
					this.OnMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Float")]
		public System.Nullable<double> Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_String", DbType="VarChar(MAX)")]
		public string String
		{
			get
			{
				return this._String;
			}
			set
			{
				if ((this._String != value))
				{
					this.OnStringChanging(value);
					this.SendPropertyChanging();
					this._String = value;
					this.SendPropertyChanged("String");
					this.OnStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Concept_Relationship", Storage="_Relationships", ThisKey="ConceptID", OtherKey="Concept1ID")]
		public EntitySet<Relationship> Relationships
		{
			get
			{
				return this._Relationships;
			}
			set
			{
				this._Relationships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Concept_Relationship1", Storage="_Relationships1", ThisKey="ConceptID", OtherKey="Concept2ID")]
		public EntitySet<Relationship> Relationships1
		{
			get
			{
				return this._Relationships1;
			}
			set
			{
				this._Relationships1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Concept", Storage="_Definition", ThisKey="DefinitionID", OtherKey="DefinitionID", IsForeignKey=true)]
		public Definition Definition
		{
			get
			{
				return this._Definition.Entity;
			}
			set
			{
				Definition previousValue = this._Definition.Entity;
				if (((previousValue != value) 
							|| (this._Definition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition.Entity = null;
						previousValue.Concepts.Remove(this);
					}
					this._Definition.Entity = value;
					if ((value != null))
					{
						value.Concepts.Add(this);
						this._DefinitionID = value.DefinitionID;
					}
					else
					{
						this._DefinitionID = default(System.Guid);
					}
					this.SendPropertyChanged("Definition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Relationships(Relationship entity)
		{
			this.SendPropertyChanging();
			entity.Concept = this;
		}
		
		private void detach_Relationships(Relationship entity)
		{
			this.SendPropertyChanging();
			entity.Concept = null;
		}
		
		private void attach_Relationships1(Relationship entity)
		{
			this.SendPropertyChanging();
			entity.Concept1 = this;
		}
		
		private void detach_Relationships1(Relationship entity)
		{
			this.SendPropertyChanging();
			entity.Concept1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Statistics]")]
	public partial class Statistic
	{
		
		private System.Guid _RecordID;
		
		private System.Guid _Type;
		
		private int _TimesSeen;
		
		public Statistic()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RecordID
		{
			get
			{
				return this._RecordID;
			}
			set
			{
				if ((this._RecordID != value))
				{
					this._RecordID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimesSeen", DbType="Int NOT NULL")]
		public int TimesSeen
		{
			get
			{
				return this._TimesSeen;
			}
			set
			{
				if ((this._TimesSeen != value))
				{
					this._TimesSeen = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Conjugations")]
	public partial class Conjugation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ConjugationID;
		
		private System.Guid _LanguageID;
		
		private System.Guid _InfinitiveDefinitionID;
		
		private string _Form;
		
		private string _Mood;
		
		private string _Person;
		
		private string _Tense;
		
		private System.Guid _ConjugatedFormDefinitionID;
		
		private EntityRef<Definition> _Definition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConjugationIDChanging(System.Guid value);
    partial void OnConjugationIDChanged();
    partial void OnLanguageIDChanging(System.Guid value);
    partial void OnLanguageIDChanged();
    partial void OnInfinitiveDefinitionIDChanging(System.Guid value);
    partial void OnInfinitiveDefinitionIDChanged();
    partial void OnFormChanging(string value);
    partial void OnFormChanged();
    partial void OnMoodChanging(string value);
    partial void OnMoodChanged();
    partial void OnPersonChanging(string value);
    partial void OnPersonChanged();
    partial void OnTenseChanging(string value);
    partial void OnTenseChanged();
    partial void OnConjugatedFormDefinitionIDChanging(System.Guid value);
    partial void OnConjugatedFormDefinitionIDChanged();
    #endregion
		
		public Conjugation()
		{
			this._Definition = default(EntityRef<Definition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConjugationID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ConjugationID
		{
			get
			{
				return this._ConjugationID;
			}
			set
			{
				if ((this._ConjugationID != value))
				{
					this.OnConjugationIDChanging(value);
					this.SendPropertyChanging();
					this._ConjugationID = value;
					this.SendPropertyChanged("ConjugationID");
					this.OnConjugationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfinitiveDefinitionID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid InfinitiveDefinitionID
		{
			get
			{
				return this._InfinitiveDefinitionID;
			}
			set
			{
				if ((this._InfinitiveDefinitionID != value))
				{
					this.OnInfinitiveDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._InfinitiveDefinitionID = value;
					this.SendPropertyChanged("InfinitiveDefinitionID");
					this.OnInfinitiveDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Form", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Form
		{
			get
			{
				return this._Form;
			}
			set
			{
				if ((this._Form != value))
				{
					this.OnFormChanging(value);
					this.SendPropertyChanging();
					this._Form = value;
					this.SendPropertyChanged("Form");
					this.OnFormChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mood", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Mood
		{
			get
			{
				return this._Mood;
			}
			set
			{
				if ((this._Mood != value))
				{
					this.OnMoodChanging(value);
					this.SendPropertyChanging();
					this._Mood = value;
					this.SendPropertyChanged("Mood");
					this.OnMoodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Person", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Person
		{
			get
			{
				return this._Person;
			}
			set
			{
				if ((this._Person != value))
				{
					this.OnPersonChanging(value);
					this.SendPropertyChanging();
					this._Person = value;
					this.SendPropertyChanged("Person");
					this.OnPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tense", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Tense
		{
			get
			{
				return this._Tense;
			}
			set
			{
				if ((this._Tense != value))
				{
					this.OnTenseChanging(value);
					this.SendPropertyChanging();
					this._Tense = value;
					this.SendPropertyChanged("Tense");
					this.OnTenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConjugatedFormDefinitionID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ConjugatedFormDefinitionID
		{
			get
			{
				return this._ConjugatedFormDefinitionID;
			}
			set
			{
				if ((this._ConjugatedFormDefinitionID != value))
				{
					if (this._Definition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConjugatedFormDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._ConjugatedFormDefinitionID = value;
					this.SendPropertyChanged("ConjugatedFormDefinitionID");
					this.OnConjugatedFormDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Conjugation", Storage="_Definition", ThisKey="ConjugatedFormDefinitionID", OtherKey="DefinitionID", IsForeignKey=true)]
		public Definition Definition
		{
			get
			{
				return this._Definition.Entity;
			}
			set
			{
				Definition previousValue = this._Definition.Entity;
				if (((previousValue != value) 
							|| (this._Definition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition.Entity = null;
						previousValue.Conjugations.Remove(this);
					}
					this._Definition.Entity = value;
					if ((value != null))
					{
						value.Conjugations.Add(this);
						this._ConjugatedFormDefinitionID = value.DefinitionID;
					}
					else
					{
						this._ConjugatedFormDefinitionID = default(System.Guid);
					}
					this.SendPropertyChanged("Definition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CorrectedSpellings")]
	public partial class CorrectedSpelling
	{
		
		private string _OriginalSpelling;
		
		private System.Guid _ResultingDefinition;
		
		public CorrectedSpelling()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalSpelling", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string OriginalSpelling
		{
			get
			{
				return this._OriginalSpelling;
			}
			set
			{
				if ((this._OriginalSpelling != value))
				{
					this._OriginalSpelling = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultingDefinition", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ResultingDefinition
		{
			get
			{
				return this._ResultingDefinition;
			}
			set
			{
				if ((this._ResultingDefinition != value))
				{
					this._ResultingDefinition = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Definitions")]
	public partial class Definition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _DefinitionID;
		
		private string _String;
		
		private bool _IsCapitalised;
		
		private System.Nullable<bool> _IsUsedAsPlural;
		
		private System.Nullable<bool> _HasPlural;
		
		private System.Nullable<System.Guid> _PluralStringDefID;
		
		private System.Guid _LanguageDefID;
		
		private bool _IsResearched;
		
		private string _Description;
		
		private string _Notes;
		
		private EntitySet<Concept> _Concepts;
		
		private EntitySet<Conjugation> _Conjugations;
		
		private EntitySet<PartsOfSpeech> _PartsOfSpeeches;
		
		private EntitySet<PartsOfSpeech> _PartsOfSpeeches1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDefinitionIDChanging(System.Guid value);
    partial void OnDefinitionIDChanged();
    partial void OnStringChanging(string value);
    partial void OnStringChanged();
    partial void OnIsCapitalisedChanging(bool value);
    partial void OnIsCapitalisedChanged();
    partial void OnIsUsedAsPluralChanging(System.Nullable<bool> value);
    partial void OnIsUsedAsPluralChanged();
    partial void OnHasPluralChanging(System.Nullable<bool> value);
    partial void OnHasPluralChanged();
    partial void OnPluralStringDefIDChanging(System.Nullable<System.Guid> value);
    partial void OnPluralStringDefIDChanged();
    partial void OnLanguageDefIDChanging(System.Guid value);
    partial void OnLanguageDefIDChanged();
    partial void OnIsResearchedChanging(bool value);
    partial void OnIsResearchedChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public Definition()
		{
			this._Concepts = new EntitySet<Concept>(new Action<Concept>(this.attach_Concepts), new Action<Concept>(this.detach_Concepts));
			this._Conjugations = new EntitySet<Conjugation>(new Action<Conjugation>(this.attach_Conjugations), new Action<Conjugation>(this.detach_Conjugations));
			this._PartsOfSpeeches = new EntitySet<PartsOfSpeech>(new Action<PartsOfSpeech>(this.attach_PartsOfSpeeches), new Action<PartsOfSpeech>(this.detach_PartsOfSpeeches));
			this._PartsOfSpeeches1 = new EntitySet<PartsOfSpeech>(new Action<PartsOfSpeech>(this.attach_PartsOfSpeeches1), new Action<PartsOfSpeech>(this.detach_PartsOfSpeeches1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefinitionID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid DefinitionID
		{
			get
			{
				return this._DefinitionID;
			}
			set
			{
				if ((this._DefinitionID != value))
				{
					this.OnDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._DefinitionID = value;
					this.SendPropertyChanged("DefinitionID");
					this.OnDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_String", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string String
		{
			get
			{
				return this._String;
			}
			set
			{
				if ((this._String != value))
				{
					this.OnStringChanging(value);
					this.SendPropertyChanging();
					this._String = value;
					this.SendPropertyChanged("String");
					this.OnStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCapitalised", DbType="Bit NOT NULL")]
		public bool IsCapitalised
		{
			get
			{
				return this._IsCapitalised;
			}
			set
			{
				if ((this._IsCapitalised != value))
				{
					this.OnIsCapitalisedChanging(value);
					this.SendPropertyChanging();
					this._IsCapitalised = value;
					this.SendPropertyChanged("IsCapitalised");
					this.OnIsCapitalisedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsedAsPlural", DbType="Bit")]
		public System.Nullable<bool> IsUsedAsPlural
		{
			get
			{
				return this._IsUsedAsPlural;
			}
			set
			{
				if ((this._IsUsedAsPlural != value))
				{
					this.OnIsUsedAsPluralChanging(value);
					this.SendPropertyChanging();
					this._IsUsedAsPlural = value;
					this.SendPropertyChanged("IsUsedAsPlural");
					this.OnIsUsedAsPluralChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasPlural", DbType="Bit")]
		public System.Nullable<bool> HasPlural
		{
			get
			{
				return this._HasPlural;
			}
			set
			{
				if ((this._HasPlural != value))
				{
					this.OnHasPluralChanging(value);
					this.SendPropertyChanging();
					this._HasPlural = value;
					this.SendPropertyChanged("HasPlural");
					this.OnHasPluralChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PluralStringDefID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PluralStringDefID
		{
			get
			{
				return this._PluralStringDefID;
			}
			set
			{
				if ((this._PluralStringDefID != value))
				{
					this.OnPluralStringDefIDChanging(value);
					this.SendPropertyChanging();
					this._PluralStringDefID = value;
					this.SendPropertyChanged("PluralStringDefID");
					this.OnPluralStringDefIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageDefID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LanguageDefID
		{
			get
			{
				return this._LanguageDefID;
			}
			set
			{
				if ((this._LanguageDefID != value))
				{
					this.OnLanguageDefIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageDefID = value;
					this.SendPropertyChanged("LanguageDefID");
					this.OnLanguageDefIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsResearched", DbType="Bit NOT NULL")]
		public bool IsResearched
		{
			get
			{
				return this._IsResearched;
			}
			set
			{
				if ((this._IsResearched != value))
				{
					this.OnIsResearchedChanging(value);
					this.SendPropertyChanging();
					this._IsResearched = value;
					this.SendPropertyChanged("IsResearched");
					this.OnIsResearchedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Concept", Storage="_Concepts", ThisKey="DefinitionID", OtherKey="DefinitionID")]
		public EntitySet<Concept> Concepts
		{
			get
			{
				return this._Concepts;
			}
			set
			{
				this._Concepts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Conjugation", Storage="_Conjugations", ThisKey="DefinitionID", OtherKey="ConjugatedFormDefinitionID")]
		public EntitySet<Conjugation> Conjugations
		{
			get
			{
				return this._Conjugations;
			}
			set
			{
				this._Conjugations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_PartsOfSpeech", Storage="_PartsOfSpeeches", ThisKey="DefinitionID", OtherKey="DefinitionID")]
		public EntitySet<PartsOfSpeech> PartsOfSpeeches
		{
			get
			{
				return this._PartsOfSpeeches;
			}
			set
			{
				this._PartsOfSpeeches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_PartsOfSpeech1", Storage="_PartsOfSpeeches1", ThisKey="DefinitionID", OtherKey="PartOfSpeechDefID")]
		public EntitySet<PartsOfSpeech> PartsOfSpeeches1
		{
			get
			{
				return this._PartsOfSpeeches1;
			}
			set
			{
				this._PartsOfSpeeches1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Concepts(Concept entity)
		{
			this.SendPropertyChanging();
			entity.Definition = this;
		}
		
		private void detach_Concepts(Concept entity)
		{
			this.SendPropertyChanging();
			entity.Definition = null;
		}
		
		private void attach_Conjugations(Conjugation entity)
		{
			this.SendPropertyChanging();
			entity.Definition = this;
		}
		
		private void detach_Conjugations(Conjugation entity)
		{
			this.SendPropertyChanging();
			entity.Definition = null;
		}
		
		private void attach_PartsOfSpeeches(PartsOfSpeech entity)
		{
			this.SendPropertyChanging();
			entity.Definition = this;
		}
		
		private void detach_PartsOfSpeeches(PartsOfSpeech entity)
		{
			this.SendPropertyChanging();
			entity.Definition = null;
		}
		
		private void attach_PartsOfSpeeches1(PartsOfSpeech entity)
		{
			this.SendPropertyChanging();
			entity.PartOfSpeechDefinition = this;
		}
		
		private void detach_PartsOfSpeeches1(PartsOfSpeech entity)
		{
			this.SendPropertyChanging();
			entity.PartOfSpeechDefinition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PartsOfSpeech")]
	public partial class PartsOfSpeech : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PartOfSpeechID;
		
		private System.Guid _DefinitionID;
		
		private string _DefinitionString;
		
		private System.Guid _PartOfSpeechDefID;
		
		private string _PartOfSpeechString;
		
		private EntityRef<Definition> _Definition;
		
		private EntityRef<Definition> _Definition1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPartOfSpeechIDChanging(System.Guid value);
    partial void OnPartOfSpeechIDChanged();
    partial void OnDefinitionIDChanging(System.Guid value);
    partial void OnDefinitionIDChanged();
    partial void OnDefinitionStringChanging(string value);
    partial void OnDefinitionStringChanged();
    partial void OnPartOfSpeechDefIDChanging(System.Guid value);
    partial void OnPartOfSpeechDefIDChanged();
    partial void OnPartOfSpeechStringChanging(string value);
    partial void OnPartOfSpeechStringChanged();
    #endregion
		
		public PartsOfSpeech()
		{
			this._Definition = default(EntityRef<Definition>);
			this._Definition1 = default(EntityRef<Definition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartOfSpeechID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PartOfSpeechID
		{
			get
			{
				return this._PartOfSpeechID;
			}
			set
			{
				if ((this._PartOfSpeechID != value))
				{
					this.OnPartOfSpeechIDChanging(value);
					this.SendPropertyChanging();
					this._PartOfSpeechID = value;
					this.SendPropertyChanged("PartOfSpeechID");
					this.OnPartOfSpeechIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefinitionID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DefinitionID
		{
			get
			{
				return this._DefinitionID;
			}
			set
			{
				if ((this._DefinitionID != value))
				{
					if (this._Definition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._DefinitionID = value;
					this.SendPropertyChanged("DefinitionID");
					this.OnDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefinitionString", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DefinitionString
		{
			get
			{
				return this._DefinitionString;
			}
			set
			{
				if ((this._DefinitionString != value))
				{
					this.OnDefinitionStringChanging(value);
					this.SendPropertyChanging();
					this._DefinitionString = value;
					this.SendPropertyChanged("DefinitionString");
					this.OnDefinitionStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartOfSpeechDefID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PartOfSpeechDefID
		{
			get
			{
				return this._PartOfSpeechDefID;
			}
			set
			{
				if ((this._PartOfSpeechDefID != value))
				{
					if (this._Definition1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartOfSpeechDefIDChanging(value);
					this.SendPropertyChanging();
					this._PartOfSpeechDefID = value;
					this.SendPropertyChanged("PartOfSpeechDefID");
					this.OnPartOfSpeechDefIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartOfSpeechString", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PartOfSpeechString
		{
			get
			{
				return this._PartOfSpeechString;
			}
			set
			{
				if ((this._PartOfSpeechString != value))
				{
					this.OnPartOfSpeechStringChanging(value);
					this.SendPropertyChanging();
					this._PartOfSpeechString = value;
					this.SendPropertyChanged("PartOfSpeechString");
					this.OnPartOfSpeechStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_PartsOfSpeech", Storage="_Definition", ThisKey="DefinitionID", OtherKey="DefinitionID", IsForeignKey=true)]
		public Definition Definition
		{
			get
			{
				return this._Definition.Entity;
			}
			set
			{
				Definition previousValue = this._Definition.Entity;
				if (((previousValue != value) 
							|| (this._Definition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition.Entity = null;
						previousValue.PartsOfSpeeches.Remove(this);
					}
					this._Definition.Entity = value;
					if ((value != null))
					{
						value.PartsOfSpeeches.Add(this);
						this._DefinitionID = value.DefinitionID;
					}
					else
					{
						this._DefinitionID = default(System.Guid);
					}
					this.SendPropertyChanged("Definition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_PartsOfSpeech1", Storage="_Definition1", ThisKey="PartOfSpeechDefID", OtherKey="DefinitionID", IsForeignKey=true)]
		public Definition PartOfSpeechDefinition
		{
			get  
			{
				return this._Definition1.Entity;
			}
			set
			{
				Definition previousValue = this._Definition1.Entity;
				if (((previousValue != value) 
							|| (this._Definition1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition1.Entity = null;
						previousValue.PartsOfSpeeches1.Remove(this);
					}
					this._Definition1.Entity = value;
					if ((value != null))
					{
						value.PartsOfSpeeches1.Add(this);
						this._PartOfSpeechDefID = value.DefinitionID;
					}
					else
					{
						this._PartOfSpeechDefID = default(System.Guid);
					}
					this.SendPropertyChanged("Definition1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Relationships")]
	public partial class Relationship : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _RelationshipID;
		
		private System.Guid _Concept1DeterminerID;
		
		private System.Nullable<double> _Concept1Quantity;
		
		private System.Guid _Concept1PartOfSpeechID;
		
		private System.Guid _Concept1ID;
		
		private System.Guid _VerbDefinitionID;
		
		private System.Nullable<System.Guid> _AdpositionID;
		
		private System.Guid _Concept2DeterminerID;
		
		private System.Nullable<double> _Concept2Quantity;
		
		private System.Guid _Concept2PartOfSpeechID;
		
		private System.Guid _Concept2ID;
		
		private System.Nullable<System.DateTime> _RelationshipStartTime;
		
		private System.Nullable<System.DateTime> _RelationshipEndTime;
		
		private System.DateTime _TimeStored;
		
		private System.Guid _SourceDefinitionID;
		
		private EntityRef<Concept> _Concept;
		
		private EntityRef<Concept> _Concept1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRelationshipIDChanging(System.Guid value);
    partial void OnRelationshipIDChanged();
    partial void OnConcept1DeterminerIDChanging(System.Guid value);
    partial void OnConcept1DeterminerIDChanged();
    partial void OnConcept1QuantityChanging(System.Nullable<double> value);
    partial void OnConcept1QuantityChanged();
    partial void OnConcept1PartOfSpeechIDChanging(System.Guid value);
    partial void OnConcept1PartOfSpeechIDChanged();
    partial void OnConcept1IDChanging(System.Guid value);
    partial void OnConcept1IDChanged();
    partial void OnVerbDefinitionIDChanging(System.Guid value);
    partial void OnVerbDefinitionIDChanged();
    partial void OnAdpositionIDChanging(System.Nullable<System.Guid> value);
    partial void OnAdpositionIDChanged();
    partial void OnConcept2DeterminerIDChanging(System.Guid value);
    partial void OnConcept2DeterminerIDChanged();
    partial void OnConcept2QuantityChanging(System.Nullable<double> value);
    partial void OnConcept2QuantityChanged();
    partial void OnConcept2PartOfSpeechIDChanging(System.Guid value);
    partial void OnConcept2PartOfSpeechIDChanged();
    partial void OnConcept2IDChanging(System.Guid value);
    partial void OnConcept2IDChanged();
    partial void OnRelationshipStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRelationshipStartTimeChanged();
    partial void OnRelationshipEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRelationshipEndTimeChanged();
    partial void OnTimeStoredChanging(System.DateTime value);
    partial void OnTimeStoredChanged();
    partial void OnSourceDefinitionIDChanging(System.Guid value);
    partial void OnSourceDefinitionIDChanged();
    #endregion
		
		public Relationship()
		{
			this._Concept = default(EntityRef<Concept>);
			this._Concept1 = default(EntityRef<Concept>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationshipID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RelationshipID
		{
			get
			{
				return this._RelationshipID;
			}
			set
			{
				if ((this._RelationshipID != value))
				{
					this.OnRelationshipIDChanging(value);
					this.SendPropertyChanging();
					this._RelationshipID = value;
					this.SendPropertyChanged("RelationshipID");
					this.OnRelationshipIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Concept1DeterminerID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Concept1DeterminerID
		{
			get
			{
				return this._Concept1DeterminerID;
			}
			set
			{
				if ((this._Concept1DeterminerID != value))
				{
					this.OnConcept1DeterminerIDChanging(value);
					this.SendPropertyChanging();
					this._Concept1DeterminerID = value;
					this.SendPropertyChanged("Concept1DeterminerID");
					this.OnConcept1DeterminerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Concept1Quantity", DbType="Float")]
		public System.Nullable<double> Concept1Quantity
		{
			get
			{
				return this._Concept1Quantity;
			}
			set
			{
				if ((this._Concept1Quantity != value))
				{
					this.OnConcept1QuantityChanging(value);
					this.SendPropertyChanging();
					this._Concept1Quantity = value;
					this.SendPropertyChanged("Concept1Quantity");
					this.OnConcept1QuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Concept1PartOfSpeechID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Concept1PartOfSpeechID
		{
			get
			{
				return this._Concept1PartOfSpeechID;
			}
			set
			{
				if ((this._Concept1PartOfSpeechID != value))
				{
					this.OnConcept1PartOfSpeechIDChanging(value);
					this.SendPropertyChanging();
					this._Concept1PartOfSpeechID = value;
					this.SendPropertyChanged("Concept1PartOfSpeechID");
					this.OnConcept1PartOfSpeechIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Concept1ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Concept1ID
		{
			get
			{
				return this._Concept1ID;
			}
			set
			{
				if ((this._Concept1ID != value))
				{
					if (this._Concept.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConcept1IDChanging(value);
					this.SendPropertyChanging();
					this._Concept1ID = value;
					this.SendPropertyChanged("Concept1ID");
					this.OnConcept1IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerbDefinitionID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VerbDefinitionID
		{
			get
			{
				return this._VerbDefinitionID;
			}
			set
			{
				if ((this._VerbDefinitionID != value))
				{
					this.OnVerbDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._VerbDefinitionID = value;
					this.SendPropertyChanged("VerbDefinitionID");
					this.OnVerbDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdpositionID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AdpositionID
		{
			get
			{
				return this._AdpositionID;
			}
			set
			{
				if ((this._AdpositionID != value))
				{
					this.OnAdpositionIDChanging(value);
					this.SendPropertyChanging();
					this._AdpositionID = value;
					this.SendPropertyChanged("AdpositionID");
					this.OnAdpositionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Concept2DeterminerID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Concept2DeterminerID
		{
			get
			{
				return this._Concept2DeterminerID;
			}
			set
			{
				if ((this._Concept2DeterminerID != value))
				{
					this.OnConcept2DeterminerIDChanging(value);
					this.SendPropertyChanging();
					this._Concept2DeterminerID = value;
					this.SendPropertyChanged("Concept2DeterminerID");
					this.OnConcept2DeterminerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Concept2Quantity", DbType="Float")]
		public System.Nullable<double> Concept2Quantity
		{
			get
			{
				return this._Concept2Quantity;
			}
			set
			{
				if ((this._Concept2Quantity != value))
				{
					this.OnConcept2QuantityChanging(value);
					this.SendPropertyChanging();
					this._Concept2Quantity = value;
					this.SendPropertyChanged("Concept2Quantity");
					this.OnConcept2QuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Concept2PartOfSpeechID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Concept2PartOfSpeechID
		{
			get
			{
				return this._Concept2PartOfSpeechID;
			}
			set
			{
				if ((this._Concept2PartOfSpeechID != value))
				{
					this.OnConcept2PartOfSpeechIDChanging(value);
					this.SendPropertyChanging();
					this._Concept2PartOfSpeechID = value;
					this.SendPropertyChanged("Concept2PartOfSpeechID");
					this.OnConcept2PartOfSpeechIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Concept2ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Concept2ID
		{
			get
			{
				return this._Concept2ID;
			}
			set
			{
				if ((this._Concept2ID != value))
				{
					if (this._Concept1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConcept2IDChanging(value);
					this.SendPropertyChanging();
					this._Concept2ID = value;
					this.SendPropertyChanged("Concept2ID");
					this.OnConcept2IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationshipStartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> RelationshipStartTime
		{
			get
			{
				return this._RelationshipStartTime;
			}
			set
			{
				if ((this._RelationshipStartTime != value))
				{
					this.OnRelationshipStartTimeChanging(value);
					this.SendPropertyChanging();
					this._RelationshipStartTime = value;
					this.SendPropertyChanged("RelationshipStartTime");
					this.OnRelationshipStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationshipEndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> RelationshipEndTime
		{
			get
			{
				return this._RelationshipEndTime;
			}
			set
			{
				if ((this._RelationshipEndTime != value))
				{
					this.OnRelationshipEndTimeChanging(value);
					this.SendPropertyChanging();
					this._RelationshipEndTime = value;
					this.SendPropertyChanged("RelationshipEndTime");
					this.OnRelationshipEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStored", DbType="DateTime NOT NULL")]
		public System.DateTime TimeStored
		{
			get
			{
				return this._TimeStored;
			}
			set
			{
				if ((this._TimeStored != value))
				{
					this.OnTimeStoredChanging(value);
					this.SendPropertyChanging();
					this._TimeStored = value;
					this.SendPropertyChanged("TimeStored");
					this.OnTimeStoredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceDefinitionID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SourceDefinitionID
		{
			get
			{
				return this._SourceDefinitionID;
			}
			set
			{
				if ((this._SourceDefinitionID != value))
				{
					this.OnSourceDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._SourceDefinitionID = value;
					this.SendPropertyChanged("SourceDefinitionID");
					this.OnSourceDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Concept_Relationship", Storage="_Concept", ThisKey="Concept1ID", OtherKey="ConceptID", IsForeignKey=true)]
		public Concept Concept
		{
			get
			{
				return this._Concept.Entity;
			}
			set
			{
				Concept previousValue = this._Concept.Entity;
				if (((previousValue != value) 
							|| (this._Concept.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Concept.Entity = null;
						previousValue.Relationships.Remove(this);
					}
					this._Concept.Entity = value;
					if ((value != null))
					{
						value.Relationships.Add(this);
						this._Concept1ID = value.ConceptID;
					}
					else
					{
						this._Concept1ID = default(System.Guid);
					}
					this.SendPropertyChanged("Concept");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Concept_Relationship1", Storage="_Concept1", ThisKey="Concept2ID", OtherKey="ConceptID", IsForeignKey=true)]
		public Concept Concept1
		{
			get
			{
				return this._Concept1.Entity;
			}
			set
			{
				Concept previousValue = this._Concept1.Entity;
				if (((previousValue != value) 
							|| (this._Concept1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Concept1.Entity = null;
						previousValue.Relationships1.Remove(this);
					}
					this._Concept1.Entity = value;
					if ((value != null))
					{
						value.Relationships1.Add(this);
						this._Concept2ID = value.ConceptID;
					}
					else
					{
						this._Concept2ID = default(System.Guid);
					}
					this.SendPropertyChanged("Concept1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
